{"version":3,"sources":["components/Nav/index.js","utils/db/db.js","components/Login/index.js","pages/Login.js","utils/UserState.js","components/Signup/index.js","pages/Signup.js","components/GameList/index.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","role","aria-label","aria-expanded","data-target","aria-hidden","id","href","email","password","axios","get","Login","useState","formData","setFormData","handleInputChange","event","target","name","value","console","log","handleFormSubmit","preventDefault","db","then","res","data","catch","err","handleLogin","action","onChange","type","placeholder","required","onClick","LoginPage","UserContext","createContext","username","_id","Provider","reducer","state","UserProvider","props","useReducer","dispatch","Signup","useContext","userState","React","setState","SignupPage","GameList","Home","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.93b6dee3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Nav = () => {\n  return (\n    <div className=\"nav\">\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <h2 className=\"navbar-item\">nerdHerd</h2>\n          <a\n            role=\"button\"\n            className=\"navbar-burger burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarBasicExample\"\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-start\"></div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <a className=\"navbar-item\" href=\"/home\">\n                Home\n              </a>\n              <div className=\"navbar-item has-dropdown is-hoverable\">\n                <a className=\"navbar-link\">User</a>\n\n                <div className=\"navbar-dropdown\">\n                  <a className=\"navbar-item\">Profile</a>\n                  <a className=\"navbar-item\">Games</a>\n                </div>\n              </div>\n              <div className=\"buttons\">\n                <a className=\"button is-light\" href=\"/login\">\n                  Log in\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Nav;\n","import axios from \"axios\";\n\nexport default {\n  //User functions\n  getUserByName: function (username) {\n    return axios.get(`/api/user/` + username);\n  },\n\n  getUserByEmail: function (email) {\n    return axios.get(`/api/user/` + email);\n  },\n\n  getUserById: function (id) {\n    return axios.get(`/api/user/` + id);\n  },\n\n  updateUserInfo: function (userData, id) {\n    return axios.put(`/api/user/` + id, userData);\n  },\n\n  LoginUser: function (email, password) {\n    return axios.get(`/api/user/login/` + email + `/` + password);\n  },\n\n  createUser: function (userData) {\n    return axios.post(\"/api/user/create\", userData);\n  },\n  //Group functions\n  getGroupsByGame: function (game) {\n    return axios.get(`/api/groups/` + game);\n  },\n\n  getGroupById: function (id) {\n    return axios.get(`/api/groups/` + id);\n  },\n\n  updateGroup: function (groupData, id) {\n    return axios.put(`/api/groups/` + id, groupData);\n  },\n\n  createGroup: function (groupData) {\n    return axios.post(`/api/groups/create`, groupData);\n  },\n\n  removeGroup: function (id) {\n    return axios.delete(`/api/groups/remove/` + id);\n  },\n  //Games functions\n  getGameByTitle: function (title) {\n    return axios.get(`/api/games/` + title);\n  },\n\n  getGameByGenre: function (genre) {\n    return axios.get(`/api/games/` + genre);\n  },\n\n  addGame: function (gameData) {\n    return axios.post(`/api/games/create`, gameData);\n  },\n\n  updateGame: function (id, gameData) {\n    return axios.put(`/api/games/` + id, gameData);\n  },\n};\n","import React, { useState } from \"react\";\nimport db from \"../../utils/db/db\";\n// import { useUserContext, useUserState } from \"../../utils/UserState\";\n\nconst Login = () => {\n  // const [state, dispatch] = useUserContext();\n\n  // const [ userState, setUserState] = useUserState();\n\n  // Setting our component's initial state\n  const [User, setUser] = useState({});\n  const [formData, setFormData] = useState({});\n\n  const handleLogin = () => {\n    const { email, password } = formData;\n    console.log(email);\n    console.log(password);\n    db.LoginUser(email, password)\n      .then((res) => console.log(res.data))\n      // .then(console.log(User))\n      .catch((err) => console.log(\"Hey, this happened: \" + err));\n  };\n\n  // Loads all books and sets them to books\n  // function handleLogin(formData, event) {\n  //   event.preventDefault();\n\n  //   // LoginUser(formData.email)\n  //   //   .then((res) => setUser(res.data))\n  //   //   .catch((err) => console.log(err));\n  // }\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n    console.log(formData);\n  }\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formData.email && formData.password) {\n      handleLogin();\n    }\n  }\n\n  return (\n    <div>\n      <section className=\"hero is-fullheight\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns is-centered\">\n              <div className=\"column is-5-tablet is-4-desktop is-3-widescreen\">\n                <form action=\"\" className=\"box\">\n                  <div className=\"field\">\n                    <label className=\"label\">Email</label>\n                    <div className=\"control has-icons-left\">\n                      <input\n                        onChange={handleInputChange}\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"thisismyemail@gmail.com\"\n                        className=\"input\"\n                        required\n                      />\n                      <span className=\"icon is-small is-left\">\n                        <i className=\"fa fa-envelope\"></i>\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <label className=\"label\">Password</label>\n                    <div className=\"control has-icons-left\">\n                      <input\n                        onChange={handleInputChange}\n                        name=\"password\"\n                        type=\"password\"\n                        placeholder=\"********\"\n                        className=\"input\"\n                        required\n                      />\n                      <span className=\"icon is-small is-left\">\n                        <i className=\"fa fa-lock\"></i>\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <label className=\"checkbox\">\n                      <input type=\"checkbox\" />\n                      &nbsp;Remember me\n                    </label>\n                  </div>\n                  <div className=\"field\">\n                    <button\n                      className=\"button is-dark\"\n                      onClick={(event) => handleFormSubmit(event)}\n                    >\n                      Login\n                    </button>\n                  </div>\n                  <p>\n                    No account? <a href=\"/signup\">Sign up here!</a>\n                  </p>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport Login from \"../components/Login\";\n\nconst LoginPage = () => {\n  return (\n    <div>\n      <Login />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\n//Create a context for skill lists to be shown/hidden\nconst UserContext = createContext({\n  username: \"\",\n  email: \"\",\n  password: \"\",\n  _id: \"\",\n});\n\n//Accessing context\nconst useUserContext = () => {\n  return useContext(UserContext);\n};\n// console.log(useUserContext);\n\nconst { Provider } = UserContext;\n\nfunction reducer(state, action) {\n  //Set a condition on the event target's name\n  switch (action.type) {\n    //the first two cases in our switch pertain to our \"Front-End\" and \"Back-End\" buttons\n    //if hide\n    case \"logout\":\n      return {\n        ...state,\n        //Change the context\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        id: \"\",\n      };\n\n    case \"email\":\n      return {\n        ...state,\n        email: action.data,\n      };\n\n    default:\n      console.log(\"Black Lives Matter\");\n  }\n}\n\nfunction UserProvider({ value = [], ...props }) {\n  const [state, dispatch] = useReducer(reducer, {});\n\n  return <Provider value={[state, dispatch]} {...props} />;\n}\n\nexport { UserProvider, useUserContext };\n","import React from \"react\";\nimport { useUserContext } from \"../../utils/UserState\";\n// import createUser from \"../../utils/db/db\";\n\nconst Signup = () => {\n  const [userState] = useUserContext();\n  const [state, setState] = React.useState(userState);\n  const handleSignUp = (event) => {\n    event.preventDefault();\n    console.log(state);\n    console.log(userState);\n  };\n\n  return (\n    <div>\n      <section className=\"hero is-fullheight\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns is-centered\">\n              <div className=\"column is-5-tablet is-4-desktop is-3-widescreen\">\n                <form action=\"\" className=\"box\">\n                  <div className=\"field\">\n                    <label className=\"label\">Email</label>\n                    <div className=\"control has-icons-left\">\n                      <input\n                        onChange={(event) =>\n                          setState({ ...state, email: event.target.value })\n                        }\n                        id=\"email\"\n                        type=\"email\"\n                        placeholder=\"thisismyemail@gmail.com\"\n                        className=\"input\"\n                        required\n                      />\n                      <span className=\"icon is-small is-left\">\n                        <i className=\"fa fa-envelope\"></i>\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <label className=\"label\">Username</label>\n                    <div className=\"control has-icons-left\">\n                      <input\n                        onChange={(event) =>\n                          setState({ ...state, username: event.target.value })\n                        }\n                        id=\"username\"\n                        type=\"username\"\n                        placeholder=\"e.g. Leeroy Jenkins\"\n                        className=\"input\"\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <label className=\"label\">Password</label>\n                    <div className=\"control has-icons-left\">\n                      <input\n                        onChange={(event) =>\n                          setState({ ...state, password: event.target.value })\n                        }\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"*******\"\n                        className=\"input\"\n                        required\n                      />\n                      <span className=\"icon is-small is-left\">\n                        <i className=\"fa fa-lock\"></i>\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <button className=\"button is-dark\" onClick={handleSignUp}>\n                      <a href=\"/home\">ign up</a>\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\nimport Signup from \"../components/Signup\";\n\nconst SignupPage = () => {\n  return (\n    <div>\n      <Signup />\n    </div>\n  );\n};\n\nexport default SignupPage;\n","import React from \"react\";\n\nconst GameList = () => {\n  return <div></div>;\n};\n\nexport default GameList;\n","import React from \"react\";\nimport GameList from \"../components/GameList/index\";\n\nconst Home = () => {\n  return (\n    <div>\n      <GameList />\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from \"./components/Nav/index\";\nimport LoginPage from \"./pages/Login\";\nimport SignupPage from \"./pages/Signup\";\nimport Home from \"./pages/Home\";\nimport { UserProvider } from \"./utils/UserState\";\n\nfunction App() {\n  return (\n    <div>\n      <UserProvider>\n        <Nav />\n        <Router>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path={[\"/\", \"/login\"]}>\n                <LoginPage />\n              </Route>\n              <Route exact path={\"/signup\"}>\n                <SignupPage />\n              </Route>\n              <Route exact path=\"/user/profile\"></Route>\n              <Route exact path={\"/home\"}>\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </UserProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}